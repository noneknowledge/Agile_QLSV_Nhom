#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace lab7___ADO.NET
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHOCSINH")]
	public partial class QLHSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBOMON(BOMON instance);
    partial void UpdateBOMON(BOMON instance);
    partial void DeleteBOMON(BOMON instance);
    partial void InsertDKHP(DKHP instance);
    partial void UpdateDKHP(DKHP instance);
    partial void DeleteDKHP(DKHP instance);
    partial void InsertHOCBONG(HOCBONG instance);
    partial void UpdateHOCBONG(HOCBONG instance);
    partial void DeleteHOCBONG(HOCBONG instance);
    partial void InsertHOCPHAN(HOCPHAN instance);
    partial void UpdateHOCPHAN(HOCPHAN instance);
    partial void DeleteHOCPHAN(HOCPHAN instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertLOP(LOP instance);
    partial void UpdateLOP(LOP instance);
    partial void DeleteLOP(LOP instance);
    partial void InsertLOPHP(LOPHP instance);
    partial void UpdateLOPHP(LOPHP instance);
    partial void DeleteLOPHP(LOPHP instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    partial void InsertUSERLOGIN(USERLOGIN instance);
    partial void UpdateUSERLOGIN(USERLOGIN instance);
    partial void DeleteUSERLOGIN(USERLOGIN instance);
    #endregion
		
		public QLHSDataContext() : 
				base(global::lab7___ADO.NET.Properties.Settings.Default.QLHOCSINHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLHSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BOMON> BOMONs
		{
			get
			{
				return this.GetTable<BOMON>();
			}
		}
		
		public System.Data.Linq.Table<DKHP> DKHPs
		{
			get
			{
				return this.GetTable<DKHP>();
			}
		}
		
		public System.Data.Linq.Table<HOCBONG> HOCBONGs
		{
			get
			{
				return this.GetTable<HOCBONG>();
			}
		}
		
		public System.Data.Linq.Table<HOCPHAN> HOCPHANs
		{
			get
			{
				return this.GetTable<HOCPHAN>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<LOP> LOPs
		{
			get
			{
				return this.GetTable<LOP>();
			}
		}
		
		public System.Data.Linq.Table<LOPHP> LOPHPs
		{
			get
			{
				return this.GetTable<LOPHP>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
		
		public System.Data.Linq.Table<USERLOGIN> USERLOGINs
		{
			get
			{
				return this.GetTable<USERLOGIN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOMON")]
	public partial class BOMON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABM;
		
		private string _TENBM;
		
		private string _MAKHOA;
		
		private EntitySet<HOCPHAN> _HOCPHANs;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABMChanging(string value);
    partial void OnMABMChanged();
    partial void OnTENBMChanging(string value);
    partial void OnTENBMChanged();
    partial void OnMAKHOAChanging(string value);
    partial void OnMAKHOAChanged();
    #endregion
		
		public BOMON()
		{
			this._HOCPHANs = new EntitySet<HOCPHAN>(new Action<HOCPHAN>(this.attach_HOCPHANs), new Action<HOCPHAN>(this.detach_HOCPHANs));
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABM
		{
			get
			{
				return this._MABM;
			}
			set
			{
				if ((this._MABM != value))
				{
					this.OnMABMChanging(value);
					this.SendPropertyChanging();
					this._MABM = value;
					this.SendPropertyChanged("MABM");
					this.OnMABMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBM", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TENBM
		{
			get
			{
				return this._TENBM;
			}
			set
			{
				if ((this._TENBM != value))
				{
					this.OnTENBMChanging(value);
					this.SendPropertyChanging();
					this._TENBM = value;
					this.SendPropertyChanged("TENBM");
					this.OnTENBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="VarChar(10)")]
		public string MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOMON_HOCPHAN", Storage="_HOCPHANs", ThisKey="MABM", OtherKey="MABM")]
		public EntitySet<HOCPHAN> HOCPHANs
		{
			get
			{
				return this._HOCPHANs;
			}
			set
			{
				this._HOCPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_BOMON", Storage="_KHOA", ThisKey="MAKHOA", OtherKey="MAKHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.BOMONs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.BOMONs.Add(this);
						this._MAKHOA = value.MAKHOA;
					}
					else
					{
						this._MAKHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.BOMON = this;
		}
		
		private void detach_HOCPHANs(HOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.BOMON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DKHP")]
	public partial class DKHP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _MALHP;
		
		private System.Nullable<int> _DIEMTKY;
		
		private System.Nullable<int> _DIEMGK;
		
		private System.Nullable<int> _DIEMCK;
		
		private System.Nullable<int> _DIEMTBHE10;
		
		private System.Nullable<int> _DIEMTBHE4;
		
		private System.Nullable<int> _HOCPHI;
		
		private string _TTRANGHP;
		
		private string _GHICHU;
		
		private EntityRef<LOPHP> _LOPHP;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnMALHPChanging(string value);
    partial void OnMALHPChanged();
    partial void OnDIEMTKYChanging(System.Nullable<int> value);
    partial void OnDIEMTKYChanged();
    partial void OnDIEMGKChanging(System.Nullable<int> value);
    partial void OnDIEMGKChanged();
    partial void OnDIEMCKChanging(System.Nullable<int> value);
    partial void OnDIEMCKChanged();
    partial void OnDIEMTBHE10Changing(System.Nullable<int> value);
    partial void OnDIEMTBHE10Changed();
    partial void OnDIEMTBHE4Changing(System.Nullable<int> value);
    partial void OnDIEMTBHE4Changed();
    partial void OnHOCPHIChanging(System.Nullable<int> value);
    partial void OnHOCPHIChanged();
    partial void OnTTRANGHPChanging(string value);
    partial void OnTTRANGHPChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public DKHP()
		{
			this._LOPHP = default(EntityRef<LOPHP>);
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALHP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALHP
		{
			get
			{
				return this._MALHP;
			}
			set
			{
				if ((this._MALHP != value))
				{
					if (this._LOPHP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALHPChanging(value);
					this.SendPropertyChanging();
					this._MALHP = value;
					this.SendPropertyChanged("MALHP");
					this.OnMALHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTKY", DbType="Int")]
		public System.Nullable<int> DIEMTKY
		{
			get
			{
				return this._DIEMTKY;
			}
			set
			{
				if ((this._DIEMTKY != value))
				{
					this.OnDIEMTKYChanging(value);
					this.SendPropertyChanging();
					this._DIEMTKY = value;
					this.SendPropertyChanged("DIEMTKY");
					this.OnDIEMTKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMGK", DbType="Int")]
		public System.Nullable<int> DIEMGK
		{
			get
			{
				return this._DIEMGK;
			}
			set
			{
				if ((this._DIEMGK != value))
				{
					this.OnDIEMGKChanging(value);
					this.SendPropertyChanging();
					this._DIEMGK = value;
					this.SendPropertyChanged("DIEMGK");
					this.OnDIEMGKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMCK", DbType="Int")]
		public System.Nullable<int> DIEMCK
		{
			get
			{
				return this._DIEMCK;
			}
			set
			{
				if ((this._DIEMCK != value))
				{
					this.OnDIEMCKChanging(value);
					this.SendPropertyChanging();
					this._DIEMCK = value;
					this.SendPropertyChanged("DIEMCK");
					this.OnDIEMCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTBHE10", DbType="Int")]
		public System.Nullable<int> DIEMTBHE10
		{
			get
			{
				return this._DIEMTBHE10;
			}
			set
			{
				if ((this._DIEMTBHE10 != value))
				{
					this.OnDIEMTBHE10Changing(value);
					this.SendPropertyChanging();
					this._DIEMTBHE10 = value;
					this.SendPropertyChanged("DIEMTBHE10");
					this.OnDIEMTBHE10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTBHE4", DbType="Int")]
		public System.Nullable<int> DIEMTBHE4
		{
			get
			{
				return this._DIEMTBHE4;
			}
			set
			{
				if ((this._DIEMTBHE4 != value))
				{
					this.OnDIEMTBHE4Changing(value);
					this.SendPropertyChanging();
					this._DIEMTBHE4 = value;
					this.SendPropertyChanged("DIEMTBHE4");
					this.OnDIEMTBHE4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCPHI", DbType="Int")]
		public System.Nullable<int> HOCPHI
		{
			get
			{
				return this._HOCPHI;
			}
			set
			{
				if ((this._HOCPHI != value))
				{
					this.OnHOCPHIChanging(value);
					this.SendPropertyChanging();
					this._HOCPHI = value;
					this.SendPropertyChanged("HOCPHI");
					this.OnHOCPHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTRANGHP", DbType="VarChar(255)")]
		public string TTRANGHP
		{
			get
			{
				return this._TTRANGHP;
			}
			set
			{
				if ((this._TTRANGHP != value))
				{
					this.OnTTRANGHPChanging(value);
					this.SendPropertyChanging();
					this._TTRANGHP = value;
					this.SendPropertyChanged("TTRANGHP");
					this.OnTTRANGHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="VarChar(255)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHP_DKHP", Storage="_LOPHP", ThisKey="MALHP", OtherKey="MALHP", IsForeignKey=true)]
		public LOPHP LOPHP
		{
			get
			{
				return this._LOPHP.Entity;
			}
			set
			{
				LOPHP previousValue = this._LOPHP.Entity;
				if (((previousValue != value) 
							|| (this._LOPHP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHP.Entity = null;
						previousValue.DKHPs.Remove(this);
					}
					this._LOPHP.Entity = value;
					if ((value != null))
					{
						value.DKHPs.Add(this);
						this._MALHP = value.MALHP;
					}
					else
					{
						this._MALHP = default(string);
					}
					this.SendPropertyChanged("LOPHP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_DKHP", Storage="_SINHVIEN", ThisKey="MASV", OtherKey="MASV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.DKHPs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.DKHPs.Add(this);
						this._MASV = value.MASV;
					}
					else
					{
						this._MASV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCBONG")]
	public partial class HOCBONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LOAIHB;
		
		private string _MOTAHB;
		
		private System.Nullable<int> _GIATRIHB;
		
		private string _MASV;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOAIHBChanging(string value);
    partial void OnLOAIHBChanged();
    partial void OnMOTAHBChanging(string value);
    partial void OnMOTAHBChanged();
    partial void OnGIATRIHBChanging(System.Nullable<int> value);
    partial void OnGIATRIHBChanged();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    #endregion
		
		public HOCBONG()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIHB", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LOAIHB
		{
			get
			{
				return this._LOAIHB;
			}
			set
			{
				if ((this._LOAIHB != value))
				{
					this.OnLOAIHBChanging(value);
					this.SendPropertyChanging();
					this._LOAIHB = value;
					this.SendPropertyChanged("LOAIHB");
					this.OnLOAIHBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTAHB", DbType="VarChar(255)")]
		public string MOTAHB
		{
			get
			{
				return this._MOTAHB;
			}
			set
			{
				if ((this._MOTAHB != value))
				{
					this.OnMOTAHBChanging(value);
					this.SendPropertyChanging();
					this._MOTAHB = value;
					this.SendPropertyChanged("MOTAHB");
					this.OnMOTAHBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRIHB", DbType="Int")]
		public System.Nullable<int> GIATRIHB
		{
			get
			{
				return this._GIATRIHB;
			}
			set
			{
				if ((this._GIATRIHB != value))
				{
					this.OnGIATRIHBChanging(value);
					this.SendPropertyChanging();
					this._GIATRIHB = value;
					this.SendPropertyChanged("GIATRIHB");
					this.OnGIATRIHBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_HOCBONG", Storage="_SINHVIEN", ThisKey="MASV", OtherKey="MASV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.HOCBONGs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.HOCBONGs.Add(this);
						this._MASV = value.MASV;
					}
					else
					{
						this._MASV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCPHAN")]
	public partial class HOCPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHP;
		
		private string _TENHP;
		
		private System.Nullable<int> _SOTC;
		
		private string _BATBUOC;
		
		private string _GHICHU;
		
		private string _MABM;
		
		private EntitySet<LOPHP> _LOPHPs;
		
		private EntityRef<BOMON> _BOMON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHPChanging(string value);
    partial void OnMAHPChanged();
    partial void OnTENHPChanging(string value);
    partial void OnTENHPChanged();
    partial void OnSOTCChanging(System.Nullable<int> value);
    partial void OnSOTCChanged();
    partial void OnBATBUOCChanging(string value);
    partial void OnBATBUOCChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnMABMChanging(string value);
    partial void OnMABMChanged();
    #endregion
		
		public HOCPHAN()
		{
			this._LOPHPs = new EntitySet<LOPHP>(new Action<LOPHP>(this.attach_LOPHPs), new Action<LOPHP>(this.detach_LOPHPs));
			this._BOMON = default(EntityRef<BOMON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHP
		{
			get
			{
				return this._MAHP;
			}
			set
			{
				if ((this._MAHP != value))
				{
					this.OnMAHPChanging(value);
					this.SendPropertyChanging();
					this._MAHP = value;
					this.SendPropertyChanged("MAHP");
					this.OnMAHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHP", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TENHP
		{
			get
			{
				return this._TENHP;
			}
			set
			{
				if ((this._TENHP != value))
				{
					this.OnTENHPChanging(value);
					this.SendPropertyChanging();
					this._TENHP = value;
					this.SendPropertyChanged("TENHP");
					this.OnTENHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTC", DbType="Int")]
		public System.Nullable<int> SOTC
		{
			get
			{
				return this._SOTC;
			}
			set
			{
				if ((this._SOTC != value))
				{
					this.OnSOTCChanging(value);
					this.SendPropertyChanging();
					this._SOTC = value;
					this.SendPropertyChanged("SOTC");
					this.OnSOTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BATBUOC", DbType="VarChar(255)")]
		public string BATBUOC
		{
			get
			{
				return this._BATBUOC;
			}
			set
			{
				if ((this._BATBUOC != value))
				{
					this.OnBATBUOCChanging(value);
					this.SendPropertyChanging();
					this._BATBUOC = value;
					this.SendPropertyChanged("BATBUOC");
					this.OnBATBUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="VarChar(255)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABM", DbType="VarChar(10)")]
		public string MABM
		{
			get
			{
				return this._MABM;
			}
			set
			{
				if ((this._MABM != value))
				{
					if (this._BOMON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABMChanging(value);
					this.SendPropertyChanging();
					this._MABM = value;
					this.SendPropertyChanged("MABM");
					this.OnMABMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_LOPHP", Storage="_LOPHPs", ThisKey="MAHP", OtherKey="MAHP")]
		public EntitySet<LOPHP> LOPHPs
		{
			get
			{
				return this._LOPHPs;
			}
			set
			{
				this._LOPHPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOMON_HOCPHAN", Storage="_BOMON", ThisKey="MABM", OtherKey="MABM", IsForeignKey=true)]
		public BOMON BOMON
		{
			get
			{
				return this._BOMON.Entity;
			}
			set
			{
				BOMON previousValue = this._BOMON.Entity;
				if (((previousValue != value) 
							|| (this._BOMON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOMON.Entity = null;
						previousValue.HOCPHANs.Remove(this);
					}
					this._BOMON.Entity = value;
					if ((value != null))
					{
						value.HOCPHANs.Add(this);
						this._MABM = value.MABM;
					}
					else
					{
						this._MABM = default(string);
					}
					this.SendPropertyChanged("BOMON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPHPs(LOPHP entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN = this;
		}
		
		private void detach_LOPHPs(LOPHP entity)
		{
			this.SendPropertyChanging();
			entity.HOCPHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHOA;
		
		private string _TENKHOA;
		
		private string _SDTKHOA;
		
		private EntitySet<BOMON> _BOMONs;
		
		private EntitySet<LOP> _LOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOAChanging(string value);
    partial void OnMAKHOAChanged();
    partial void OnTENKHOAChanging(string value);
    partial void OnTENKHOAChanged();
    partial void OnSDTKHOAChanging(string value);
    partial void OnSDTKHOAChanged();
    #endregion
		
		public KHOA()
		{
			this._BOMONs = new EntitySet<BOMON>(new Action<BOMON>(this.attach_BOMONs), new Action<BOMON>(this.detach_BOMONs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOA", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TENKHOA
		{
			get
			{
				return this._TENKHOA;
			}
			set
			{
				if ((this._TENKHOA != value))
				{
					this.OnTENKHOAChanging(value);
					this.SendPropertyChanging();
					this._TENKHOA = value;
					this.SendPropertyChanged("TENKHOA");
					this.OnTENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKHOA", DbType="VarChar(10)")]
		public string SDTKHOA
		{
			get
			{
				return this._SDTKHOA;
			}
			set
			{
				if ((this._SDTKHOA != value))
				{
					this.OnSDTKHOAChanging(value);
					this.SendPropertyChanging();
					this._SDTKHOA = value;
					this.SendPropertyChanged("SDTKHOA");
					this.OnSDTKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_BOMON", Storage="_BOMONs", ThisKey="MAKHOA", OtherKey="MAKHOA")]
		public EntitySet<BOMON> BOMONs
		{
			get
			{
				return this._BOMONs;
			}
			set
			{
				this._BOMONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_LOPs", ThisKey="MAKHOA", OtherKey="MAKHOA")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOMONs(BOMON entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_BOMONs(BOMON entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP")]
	public partial class LOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOP;
		
		private string _TENLOP;
		
		private string _CHUYENNGANH;
		
		private string _LOPTRUONG;
		
		private System.Nullable<int> _SL_SV;
		
		private string _MAKHOA;
		
		private string _NIENKHOA;
		
		private EntitySet<LOPHP> _LOPHPs;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnCHUYENNGANHChanging(string value);
    partial void OnCHUYENNGANHChanged();
    partial void OnLOPTRUONGChanging(string value);
    partial void OnLOPTRUONGChanged();
    partial void OnSL_SVChanging(System.Nullable<int> value);
    partial void OnSL_SVChanged();
    partial void OnMAKHOAChanging(string value);
    partial void OnMAKHOAChanged();
    partial void OnNIENKHOAChanging(string value);
    partial void OnNIENKHOAChanged();
    #endregion
		
		public LOP()
		{
			this._LOPHPs = new EntitySet<LOPHP>(new Action<LOPHP>(this.attach_LOPHPs), new Action<LOPHP>(this.detach_LOPHPs));
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._KHOA = default(EntityRef<KHOA>);
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUYENNGANH", DbType="VarChar(255)")]
		public string CHUYENNGANH
		{
			get
			{
				return this._CHUYENNGANH;
			}
			set
			{
				if ((this._CHUYENNGANH != value))
				{
					this.OnCHUYENNGANHChanging(value);
					this.SendPropertyChanging();
					this._CHUYENNGANH = value;
					this.SendPropertyChanged("CHUYENNGANH");
					this.OnCHUYENNGANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOPTRUONG", DbType="VarChar(10)")]
		public string LOPTRUONG
		{
			get
			{
				return this._LOPTRUONG;
			}
			set
			{
				if ((this._LOPTRUONG != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOPTRUONGChanging(value);
					this.SendPropertyChanging();
					this._LOPTRUONG = value;
					this.SendPropertyChanged("LOPTRUONG");
					this.OnLOPTRUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_SV", DbType="Int")]
		public System.Nullable<int> SL_SV
		{
			get
			{
				return this._SL_SV;
			}
			set
			{
				if ((this._SL_SV != value))
				{
					this.OnSL_SVChanging(value);
					this.SendPropertyChanging();
					this._SL_SV = value;
					this.SendPropertyChanged("SL_SV");
					this.OnSL_SVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOA", DbType="VarChar(10)")]
		public string MAKHOA
		{
			get
			{
				return this._MAKHOA;
			}
			set
			{
				if ((this._MAKHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOAChanging(value);
					this.SendPropertyChanging();
					this._MAKHOA = value;
					this.SendPropertyChanged("MAKHOA");
					this.OnMAKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIENKHOA", DbType="VarChar(255)")]
		public string NIENKHOA
		{
			get
			{
				return this._NIENKHOA;
			}
			set
			{
				if ((this._NIENKHOA != value))
				{
					this.OnNIENKHOAChanging(value);
					this.SendPropertyChanging();
					this._NIENKHOA = value;
					this.SendPropertyChanged("NIENKHOA");
					this.OnNIENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_LOPHP", Storage="_LOPHPs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<LOPHP> LOPHPs
		{
			get
			{
				return this._LOPHPs;
			}
			set
			{
				this._LOPHPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_SINHVIENs", ThisKey="MALOP", OtherKey="MALOP")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_LOP", Storage="_KHOA", ThisKey="MAKHOA", OtherKey="MAKHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._MAKHOA = value.MAKHOA;
					}
					else
					{
						this._MAKHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_LOP", Storage="_SINHVIEN", ThisKey="LOPTRUONG", OtherKey="MASV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.LOPs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.LOPs.Add(this);
						this._LOPTRUONG = value.MASV;
					}
					else
					{
						this._LOPTRUONG = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPHPs(LOPHP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_LOPHPs(LOPHP entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPHP")]
	public partial class LOPHP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALHP;
		
		private string _MALOP;
		
		private string _MAHP;
		
		private System.Nullable<System.DateTime> _TGBD;
		
		private System.Nullable<System.DateTime> _TGKT;
		
		private System.Nullable<int> _SSTOIDA;
		
		private System.Nullable<int> _DADK;
		
		private System.Nullable<int> _HOCKY;
		
		private string _NAM;
		
		private EntitySet<DKHP> _DKHPs;
		
		private EntityRef<HOCPHAN> _HOCPHAN;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALHPChanging(string value);
    partial void OnMALHPChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnMAHPChanging(string value);
    partial void OnMAHPChanged();
    partial void OnTGBDChanging(System.Nullable<System.DateTime> value);
    partial void OnTGBDChanged();
    partial void OnTGKTChanging(System.Nullable<System.DateTime> value);
    partial void OnTGKTChanged();
    partial void OnSSTOIDAChanging(System.Nullable<int> value);
    partial void OnSSTOIDAChanged();
    partial void OnDADKChanging(System.Nullable<int> value);
    partial void OnDADKChanged();
    partial void OnHOCKYChanging(System.Nullable<int> value);
    partial void OnHOCKYChanged();
    partial void OnNAMChanging(string value);
    partial void OnNAMChanged();
    #endregion
		
		public LOPHP()
		{
			this._DKHPs = new EntitySet<DKHP>(new Action<DKHP>(this.attach_DKHPs), new Action<DKHP>(this.detach_DKHPs));
			this._HOCPHAN = default(EntityRef<HOCPHAN>);
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALHP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALHP
		{
			get
			{
				return this._MALHP;
			}
			set
			{
				if ((this._MALHP != value))
				{
					this.OnMALHPChanging(value);
					this.SendPropertyChanging();
					this._MALHP = value;
					this.SendPropertyChanged("MALHP");
					this.OnMALHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MAHP
		{
			get
			{
				return this._MAHP;
			}
			set
			{
				if ((this._MAHP != value))
				{
					if (this._HOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHPChanging(value);
					this.SendPropertyChanging();
					this._MAHP = value;
					this.SendPropertyChanged("MAHP");
					this.OnMAHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGBD
		{
			get
			{
				return this._TGBD;
			}
			set
			{
				if ((this._TGBD != value))
				{
					this.OnTGBDChanging(value);
					this.SendPropertyChanging();
					this._TGBD = value;
					this.SendPropertyChanged("TGBD");
					this.OnTGBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGKT
		{
			get
			{
				return this._TGKT;
			}
			set
			{
				if ((this._TGKT != value))
				{
					this.OnTGKTChanging(value);
					this.SendPropertyChanging();
					this._TGKT = value;
					this.SendPropertyChanged("TGKT");
					this.OnTGKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSTOIDA", DbType="Int")]
		public System.Nullable<int> SSTOIDA
		{
			get
			{
				return this._SSTOIDA;
			}
			set
			{
				if ((this._SSTOIDA != value))
				{
					this.OnSSTOIDAChanging(value);
					this.SendPropertyChanging();
					this._SSTOIDA = value;
					this.SendPropertyChanged("SSTOIDA");
					this.OnSSTOIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DADK", DbType="Int")]
		public System.Nullable<int> DADK
		{
			get
			{
				return this._DADK;
			}
			set
			{
				if ((this._DADK != value))
				{
					this.OnDADKChanging(value);
					this.SendPropertyChanging();
					this._DADK = value;
					this.SendPropertyChanged("DADK");
					this.OnDADKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOCKY", DbType="Int")]
		public System.Nullable<int> HOCKY
		{
			get
			{
				return this._HOCKY;
			}
			set
			{
				if ((this._HOCKY != value))
				{
					this.OnHOCKYChanging(value);
					this.SendPropertyChanging();
					this._HOCKY = value;
					this.SendPropertyChanged("HOCKY");
					this.OnHOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAM", DbType="VarChar(10)")]
		public string NAM
		{
			get
			{
				return this._NAM;
			}
			set
			{
				if ((this._NAM != value))
				{
					this.OnNAMChanging(value);
					this.SendPropertyChanging();
					this._NAM = value;
					this.SendPropertyChanged("NAM");
					this.OnNAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHP_DKHP", Storage="_DKHPs", ThisKey="MALHP", OtherKey="MALHP")]
		public EntitySet<DKHP> DKHPs
		{
			get
			{
				return this._DKHPs;
			}
			set
			{
				this._DKHPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCPHAN_LOPHP", Storage="_HOCPHAN", ThisKey="MAHP", OtherKey="MAHP", IsForeignKey=true)]
		public HOCPHAN HOCPHAN
		{
			get
			{
				return this._HOCPHAN.Entity;
			}
			set
			{
				HOCPHAN previousValue = this._HOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._HOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCPHAN.Entity = null;
						previousValue.LOPHPs.Remove(this);
					}
					this._HOCPHAN.Entity = value;
					if ((value != null))
					{
						value.LOPHPs.Add(this);
						this._MAHP = value.MAHP;
					}
					else
					{
						this._MAHP = default(string);
					}
					this.SendPropertyChanged("HOCPHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_LOPHP", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.LOPHPs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.LOPHPs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DKHPs(DKHP entity)
		{
			this.SendPropertyChanging();
			entity.LOPHP = this;
		}
		
		private void detach_DKHPs(DKHP entity)
		{
			this.SendPropertyChanging();
			entity.LOPHP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASV;
		
		private string _HOSV;
		
		private string _TENSV;
		
		private string _CMND;
		
		private System.Nullable<int> _TUOI;
		
		private System.Nullable<System.DateTime> _NAMSINH;
		
		private string _PHAI;
		
		private string _DIACHI;
		
		private System.Nullable<int> _CONGNO;
		
		private string _LHDT;
		
		private string _MALOP;
		
		private string _KHOAHOC;
		
		private EntitySet<DKHP> _DKHPs;
		
		private EntitySet<HOCBONG> _HOCBONGs;
		
		private EntitySet<LOP> _LOPs;
		
		private EntitySet<USERLOGIN> _USERLOGINs;
		
		private EntityRef<LOP> _LOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    partial void OnHOSVChanging(string value);
    partial void OnHOSVChanged();
    partial void OnTENSVChanging(string value);
    partial void OnTENSVChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnTUOIChanging(System.Nullable<int> value);
    partial void OnTUOIChanged();
    partial void OnNAMSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNAMSINHChanged();
    partial void OnPHAIChanging(string value);
    partial void OnPHAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnCONGNOChanging(System.Nullable<int> value);
    partial void OnCONGNOChanged();
    partial void OnLHDTChanging(string value);
    partial void OnLHDTChanged();
    partial void OnMALOPChanging(string value);
    partial void OnMALOPChanged();
    partial void OnKHOAHOCChanging(string value);
    partial void OnKHOAHOCChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._DKHPs = new EntitySet<DKHP>(new Action<DKHP>(this.attach_DKHPs), new Action<DKHP>(this.detach_DKHPs));
			this._HOCBONGs = new EntitySet<HOCBONG>(new Action<HOCBONG>(this.attach_HOCBONGs), new Action<HOCBONG>(this.detach_HOCBONGs));
			this._LOPs = new EntitySet<LOP>(new Action<LOP>(this.attach_LOPs), new Action<LOP>(this.detach_LOPs));
			this._USERLOGINs = new EntitySet<USERLOGIN>(new Action<USERLOGIN>(this.attach_USERLOGINs), new Action<USERLOGIN>(this.detach_USERLOGINs));
			this._LOP = default(EntityRef<LOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOSV", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string HOSV
		{
			get
			{
				return this._HOSV;
			}
			set
			{
				if ((this._HOSV != value))
				{
					this.OnHOSVChanging(value);
					this.SendPropertyChanging();
					this._HOSV = value;
					this.SendPropertyChanged("HOSV");
					this.OnHOSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSV", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TENSV
		{
			get
			{
				return this._TENSV;
			}
			set
			{
				if ((this._TENSV != value))
				{
					this.OnTENSVChanging(value);
					this.SendPropertyChanging();
					this._TENSV = value;
					this.SendPropertyChanged("TENSV");
					this.OnTENSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(255)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TUOI", DbType="Int")]
		public System.Nullable<int> TUOI
		{
			get
			{
				return this._TUOI;
			}
			set
			{
				if ((this._TUOI != value))
				{
					this.OnTUOIChanging(value);
					this.SendPropertyChanging();
					this._TUOI = value;
					this.SendPropertyChanged("TUOI");
					this.OnTUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NAMSINH
		{
			get
			{
				return this._NAMSINH;
			}
			set
			{
				if ((this._NAMSINH != value))
				{
					this.OnNAMSINHChanging(value);
					this.SendPropertyChanging();
					this._NAMSINH = value;
					this.SendPropertyChanged("NAMSINH");
					this.OnNAMSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHAI", DbType="VarChar(10)")]
		public string PHAI
		{
			get
			{
				return this._PHAI;
			}
			set
			{
				if ((this._PHAI != value))
				{
					this.OnPHAIChanging(value);
					this.SendPropertyChanging();
					this._PHAI = value;
					this.SendPropertyChanged("PHAI");
					this.OnPHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="VarChar(255)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONGNO", DbType="Int")]
		public System.Nullable<int> CONGNO
		{
			get
			{
				return this._CONGNO;
			}
			set
			{
				if ((this._CONGNO != value))
				{
					this.OnCONGNOChanging(value);
					this.SendPropertyChanging();
					this._CONGNO = value;
					this.SendPropertyChanged("CONGNO");
					this.OnCONGNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LHDT", DbType="VarChar(255)")]
		public string LHDT
		{
			get
			{
				return this._LHDT;
			}
			set
			{
				if ((this._LHDT != value))
				{
					this.OnLHDTChanging(value);
					this.SendPropertyChanging();
					this._LHDT = value;
					this.SendPropertyChanged("LHDT");
					this.OnLHDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOP", DbType="VarChar(10)")]
		public string MALOP
		{
			get
			{
				return this._MALOP;
			}
			set
			{
				if ((this._MALOP != value))
				{
					if (this._LOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOPChanging(value);
					this.SendPropertyChanging();
					this._MALOP = value;
					this.SendPropertyChanged("MALOP");
					this.OnMALOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KHOAHOC", DbType="VarChar(255)")]
		public string KHOAHOC
		{
			get
			{
				return this._KHOAHOC;
			}
			set
			{
				if ((this._KHOAHOC != value))
				{
					this.OnKHOAHOCChanging(value);
					this.SendPropertyChanging();
					this._KHOAHOC = value;
					this.SendPropertyChanged("KHOAHOC");
					this.OnKHOAHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_DKHP", Storage="_DKHPs", ThisKey="MASV", OtherKey="MASV")]
		public EntitySet<DKHP> DKHPs
		{
			get
			{
				return this._DKHPs;
			}
			set
			{
				this._DKHPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_HOCBONG", Storage="_HOCBONGs", ThisKey="MASV", OtherKey="MASV")]
		public EntitySet<HOCBONG> HOCBONGs
		{
			get
			{
				return this._HOCBONGs;
			}
			set
			{
				this._HOCBONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_LOP", Storage="_LOPs", ThisKey="MASV", OtherKey="LOPTRUONG")]
		public EntitySet<LOP> LOPs
		{
			get
			{
				return this._LOPs;
			}
			set
			{
				this._LOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_USERLOGIN", Storage="_USERLOGINs", ThisKey="MASV", OtherKey="MASV")]
		public EntitySet<USERLOGIN> USERLOGINs
		{
			get
			{
				return this._USERLOGINs;
			}
			set
			{
				this._USERLOGINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_SINHVIEN", Storage="_LOP", ThisKey="MALOP", OtherKey="MALOP", IsForeignKey=true)]
		public LOP LOP
		{
			get
			{
				return this._LOP.Entity;
			}
			set
			{
				LOP previousValue = this._LOP.Entity;
				if (((previousValue != value) 
							|| (this._LOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOP.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._MALOP = value.MALOP;
					}
					else
					{
						this._MALOP = default(string);
					}
					this.SendPropertyChanged("LOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DKHPs(DKHP entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_DKHPs(DKHP entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
		
		private void attach_HOCBONGs(HOCBONG entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_HOCBONGs(HOCBONG entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
		
		private void attach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_LOPs(LOP entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
		
		private void attach_USERLOGINs(USERLOGIN entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_USERLOGINs(USERLOGIN entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERLOGIN")]
	public partial class USERLOGIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _VAITRO;
		
		private string _MASV;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnVAITROChanging(string value);
    partial void OnVAITROChanged();
    partial void OnMASVChanging(string value);
    partial void OnMASVChanged();
    #endregion
		
		public USERLOGIN()
		{
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAITRO", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string VAITRO
		{
			get
			{
				return this._VAITRO;
			}
			set
			{
				if ((this._VAITRO != value))
				{
					this.OnVAITROChanging(value);
					this.SendPropertyChanging();
					this._VAITRO = value;
					this.SendPropertyChanged("VAITRO");
					this.OnVAITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASV", DbType="VarChar(10)")]
		public string MASV
		{
			get
			{
				return this._MASV;
			}
			set
			{
				if ((this._MASV != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASVChanging(value);
					this.SendPropertyChanging();
					this._MASV = value;
					this.SendPropertyChanged("MASV");
					this.OnMASVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_USERLOGIN", Storage="_SINHVIEN", ThisKey="MASV", OtherKey="MASV", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.USERLOGINs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.USERLOGINs.Add(this);
						this._MASV = value.MASV;
					}
					else
					{
						this._MASV = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
